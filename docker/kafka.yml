version: '3.7'
services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    container_name: zookeeper
    ports:
      - '2181'

    volumes:
      - zookeeper_data:/bitnami
    environment:
      - ZOO_SERVER_ID=1
      - ALLOW_ANONYMOUS_LOGIN=yes
      - ZOO_SERVERS=zookeeper:2888:3888
    networks:
      - ${GLOBAL_NETWORK:-kafka}

  broker:
      image: confluentinc/cp-kafka:5.5.5
      restart: always
      container_name: broker
      ports:
        - "9092:9092"

      depends_on:
        - zookeeper
        
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_INTERNAL://broker:29092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      volumes:
        - "brokerdata:/var/lib/kafka/data"
      networks:
        - ${GLOBAL_NETWORK:-kafka}

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.5
    restart: always
    container_name: schema-registry
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "8081:8081"

    depends_on:
      - zookeeper
      - broker
    environment:
       SCHEMA_REGISTRY_HOST_NAME: schema-registry
       SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
       SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://broker:29092
       SCHEMA_REGISTRY_MASTER_ELIGIBILITY: "true"

    networks:
      - ${GLOBAL_NETWORK:-kafka}

volumes:
  zookeeper_data:
    driver: local
  brokerdata:
    driver: local